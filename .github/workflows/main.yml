# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:  
        AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}    # set this to your application's name
        AZURE_WEBAPP_PACKAGE_PATH: '${{ github.workspace }}/**.zip'      # set this to the path to your web app project, defaults to the repository root
        
    steps:     
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
          java-version: 1.11
          
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
#     - uses: microsoft/setup-msbuild@v1.0.2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        
    - name: Use NuGet
      uses: nuget/setup-nuget@v1
      
    - name: NuGet restore
      run: nuget restore '${{ github.workspace }}/src/TransCelerate.SDR.sln'
      
      
#     - name: Sonarqube Begin
#       run: | 
#        dotnet tool install --global dotnet-sonarscanner
#        dotnet sonarscanner begin /o:someorg /k:somekey /d:sonar.login=${{ secrets.SONAR_TOKEN }} /s:$GITHUB_WORKSPACE/SonarQube.Analysis.xml
    
    - name: Find and Replace User Name - Using Build Variable
      run: |
        find ${{ github.workspace }}/src/TransCelerate.SDR.WebApi/appsettings.json -type f -exec sed -i ''s@{#KeyVault-Name#}@'${{ secrets.KeyVault_Dev }}'@g'' {} \;
        
#     - name: Build solution **\*.sln
#       run: dotnet publish 'src/TransCelerate.SDR.sln' --configuration release
      
#     - name: Zip publish files
#       shell: pwsh
#       run: |
#           Compress-Archive -Path "${{ github.workspace }}/src/TransCelerate.SDR.WebApi/bin/Release/net6.0/publish/**" -DestinationPath "${{ github.workspace }}\Publish.zip" -Force  
           
#     - name: dotnet test
#       run: |
#         cd '${{ github.workspace }}/src/TransCelerate.SDR.UnitTesting/'
#         dotnet test TransCelerate.SDR.UnitTesting.csproj --configuration release  --collect:"XPlat Code Coverage" --logger trx
#         cp TestResults/*/coverage.cobertura.xml '${{ github.workspace }}/coverage.cobertura.xml'
          
#     - name: Code Coverage Summary Report
#       uses: irongut/CodeCoverageSummary@v1.0.2
#       with:
#         filename: coverage.cobertura.xml
#         badge: true
#         format: 'markdown'
#         output: 'both'
        
#     - name: use this action, test solution dir
#       uses: zyborg/dotnet-tests-report@v1
#       with:
#         project_path: '${{ github.workspace }}/src/TransCelerate.SDR.UnitTesting'
#         report_name: 'TransCelerate.SDR.UnitTesting'
#         report_title: API Tests Report
#         github_token: ${{ secrets.GITHUB_TOKEN }}
        
#     - name: 'Publish Artifact: Artifact'
#       uses: actions/upload-artifact@v2
#       with:
#         path: '${{ github.workspace }}/Publish.zip'
#         name: Build-Artifact
        
#    - # "Note: the 'AZURE_SP' secret is required to be added into GitHub Secrets. See this blog post for details: https://samlearnsazure.blog/2019/12/13/github-actions/"
#       name: Azure Login
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_SP }}       
        
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
          dotnet tool update dotnet-reportgenerator-globaltool -g 
          
    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      shell: pwsh
      run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"transceleratebiopharmainc_ddf-sdr-api" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.coverageReportPaths="${{ github.workspace }}/coverage.cobertura.xml"
          dotnet build 'src/TransCelerate.SDR.sln' --configuration release
          dotnet publish 'src/TransCelerate.SDR.sln' --configuration release
          Compress-Archive -Path "${{ github.workspace }}/src/TransCelerate.SDR.WebApi/bin/Release/net6.0/publish/**" -DestinationPath "${{ github.workspace }}\Publish.zip" -Force  
          dotnet test 'src/TransCelerate.SDR.UnitTesting/TransCelerate.SDR.UnitTesting.csproj' --configuration release  --collect:"XPlat Code Coverage" --logger trx 
          Copy-Item 'src/TransCelerate.SDR.UnitTesting/TestResults/*/coverage.cobertura.xml' '${{ github.workspace }}/coverage.cobertura.xml'
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
     
#     - name: 'Run Azure webapp deploy action using publish profile credentials'
#       uses: azure/webapps-deploy@v2
#       with: 
#         app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
#         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}




    
